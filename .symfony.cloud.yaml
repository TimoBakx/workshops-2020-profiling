name: app

type: php:7.4

relationships:
    database: "database:mysql"

runtime:
    extensions:
        - pdo_mysql
        - apcu
        - blackfire

#variables:
#    php:
#        # uncomment on PHP 7.4+
#        #opcache.preload: /app/config/preload.php

build:
    flavor: none

disk: 512

web:
    locations:
        "/":
            root: "public"
            expires: 1h
            passthru: "/index.php"



mounts:
    "/var": { source: local, source_path: var }

hooks:
    build: |
        set -x -e

        curl -s https://get.symfony.com/cloud/configurator | (>&2 bash)
        # (>&2 php-ext-install ctype X.Y.Z)
        # (>&2 php-ext-install iconv X.Y.Z)

        # Installing blackfire-player
        (
            mkdir -p ${SYMFONY_CACHE_DIR}/blackfire
            cd ${SYMFONY_CACHE_DIR}/blackfire
            wget -N https://get.blackfire.io/blackfire-player.phar
            chmod +x blackfire-player.phar
            cp blackfire-player.phar /app/.global/bin/blackfire-player
        )

        # Remove yarn.lock to ensure that assets won't be built
        # as they are already committed.
        rm /app/yarn.lock

        # Override symfony-build helper script with some tweaks
        # Don't do this at home!
        (
            # install PHP extensions
            exts=$(echo "$SYMFONY_VARIABLES" | base64 -d | jq -r 'with_entries(select(.key | startswith("php-ext:"))) | to_entries[] | [.key, .value] | join(":")')
            for ext in $exts; do
                name=$(echo "$ext" | cut -d':' -f 2)
                version=$(echo "$ext" | cut -d':' -f 3)
                php-ext-install "$name" "$version"
            done

            # we always install dev deps (for dev env we need them and we can't know where our image will be deployed)
            # shellcheck disable=SC2086
            #symfony composer install --prefer-dist --optimize-autoloader --apcu-autoloader --classmap-authoritative ${COMPOSER_FLAGS:-} --no-scripts --no-progress --no-ansi --no-interaction
            # Tweaked composer install
            symfony composer install --prefer-dist ${COMPOSER_FLAGS:-} --no-scripts --no-progress --no-ansi --no-interaction
            # we force a prod deployment (Flex only)
            if composer show symfony/flex >/dev/null 2>/dev/null; then
                symfony composer dump-env prod || true
                symfony composer run auto-scripts
                # move cache if generated (not the case when symfony/console is not installed -- display a warning in such a case)
                if [[ -d "${SYMFONY_APP_CACHE_DIR:-var/cache}/${APP_ENV:-prod}" ]]; then
                    mkdir -p tmp/cache && mv "${SYMFONY_APP_CACHE_DIR:-var/cache}/${APP_ENV:-prod}" tmp/cache/
                else
                    echo -e "Cache was not generated as symfony/console is not installed, you should require it!"
                fi
            else
                symfony composer run post-install-cmd
            fi
        )
        
        #(>&2 symfony-build)

    deploy: |
        set -x -e

        (>&2 symfony-deploy)
